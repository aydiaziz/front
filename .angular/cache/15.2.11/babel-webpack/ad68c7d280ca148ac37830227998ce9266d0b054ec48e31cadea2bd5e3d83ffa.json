{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/Services/fileupload.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction CreatpostComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Content is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreatpostComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Error uploading image: \", ctx_r1.uploadError, \" \");\n  }\n}\nfunction CreatpostComponent_div_11_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.previewImage, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CreatpostComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, CreatpostComponent_div_11_img_2_Template, 1, 1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Selected Image: \", ctx_r2.selectedFile.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.previewImage);\n  }\n}\nexport class CreatpostComponent {\n  constructor(postService, formBuilder, fileUploadService, sanitizer) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.fileUploadService = fileUploadService;\n    this.sanitizer = sanitizer;\n    this.post = {\n      pubid: 0,\n      likes: 0,\n      content: '',\n      publication_date: new Date(),\n      img: '',\n      comments: [],\n      productimage: []\n    };\n    this.selectedFile = null;\n    this.uploadError = null;\n    this.previewImage = null; // Stores the data URL for the preview image\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n  ngOnInit() {}\n  addPost(postForm) {\n    if (postForm.invalid) {\n      console.error('Form is invalid, cannot submit post.');\n      return;\n    }\n    const postFormData = this.prepareFromData(this.post);\n    this.postService.addPost(postFormData).subscribe(response => {\n      console.log('Post created successfully:', response);\n      postForm.reset(); // Reset form after success\n    }, error => {\n      console.error('Error creating post:', error.message);\n      this.uploadError = error.message;\n    });\n  }\n  onFileSelected(event) {\n    this.uploadError = null;\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const fileHandle = {\n        file,\n        url: this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(file))\n      };\n      this.post.productimage.push(fileHandle);\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.previewImage = this.convertFileToDataURL(file); // Replace with your conversion function\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n  prepareFromData(post) {\n    const formData = new FormData();\n    formData.append('content', post.content);\n    formData.append('post', new Blob([JSON.stringify(post)], {\n      type: 'application/json'\n    }));\n    for (let i = 0; i < post.productimage.length; i++) {\n      formData.append('imageFile', post.productimage[i].file, post.productimage[i].file.name);\n    }\n    return formData;\n  }\n  convertFileToDataURL(file) {\n    const reader = new FileReader();\n    const result = new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result?.toString() || '');\n      reader.onerror = reject;\n    });\n    reader.readAsDataURL(file);\n    return result.then(dataURL => dataURL);\n  }\n  static #_ = this.ɵfac = function CreatpostComponent_Factory(t) {\n    return new (t || CreatpostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FileuploadService), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatpostComponent,\n    selectors: [[\"app-creatpost\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"content\"], [\"formControlName\", \"content\", \"id\", \"content\", \"rows\", \"5\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", \"formControlName\", \"img\", 1, \"form-control-file\", 3, \"change\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [1, \"mt-2\"], [\"alt\", \"Selected Image Preview\", \"class\", \"img-thumbnail\", 3, \"src\", 4, \"ngIf\"], [\"alt\", \"Selected Image Preview\", 1, \"img-thumbnail\", 3, \"src\"]],\n    template: function CreatpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatpostComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addPost(ctx.postForm);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Content:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"textarea\", 3);\n        i0.ɵɵtemplate(5, CreatpostComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Image:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function CreatpostComponent_Template_input_change_9_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CreatpostComponent_div_10_Template, 2, 1, \"div\", 4);\n        i0.ɵɵtemplate(11, CreatpostComponent_div_11_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Create Post\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.postForm.get(\"content\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","CreatpostComponent","constructor","postService","formBuilder","fileUploadService","sanitizer","pubid","likes","content","publication_date","Date","img","comments","productimage","postForm","group","required","ngOnInit","addPost","invalid","console","error","postFormData","prepareFromData","post","subscribe","response","log","reset","message","uploadError","onFileSelected","event","target","files","file","fileHandle","url","bypassSecurityTrustResourceUrl","window","URL","createObjectURL","push","reader","FileReader","onload","e","previewImage","convertFileToDataURL","readAsDataURL","formData","FormData","append","Blob","JSON","stringify","type","i","length","name","result","Promise","resolve","reject","toString","onerror","then","dataURL","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PostService } from 'src/app/Services/post.service';\nimport { Post } from 'src/app/Model/post';\nimport { FileuploadService } from 'src/app/Services/fileupload.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FileHandle } from 'src/app/Model/file-handle';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-creatpost',\n  templateUrl: './creatpost.component.html',\n  styleUrls: ['./creatpost.component.css']\n})\nexport class CreatpostComponent implements OnInit {\n  postForm!: FormGroup;\n  post: Post = {\n    pubid: 0,\n    likes: 0,\n    content: '',\n    publication_date: new Date(),\n    img: '',\n    comments: [],\n    productimage: []\n  };\n  selectedFile: File | null = null;\n  uploadError: string | null = null;\n  previewImage: string | null = null; // Stores the data URL for the preview image\n\n  constructor(\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private fileUploadService: FileuploadService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  addPost(postForm: FormGroup) {\n    if (postForm.invalid) {\n      console.error('Form is invalid, cannot submit post.');\n      return;\n    }\n\n    const postFormData = this.prepareFromData(this.post);\n\n    this.postService.addPost(postFormData).subscribe(\n      (response: Post) => {\n        console.log('Post created successfully:', response);\n        postForm.reset(); // Reset form after success\n      },\n      (error: HttpErrorResponse) => {\n        console.error('Error creating post:', error.message);\n        this.uploadError = error.message;\n      }\n    );\n  }\n\n  onFileSelected(event: any): void {\n    this.uploadError = null;\n\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const fileHandle: FileHandle = {\n        file,\n        url: this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(file))\n      };\n      this.post.productimage.push(fileHandle);\n\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.previewImage = this.convertFileToDataURL(file); // Replace with your conversion function\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  prepareFromData(post: Post): FormData {\n    const formData = new FormData();\n    formData.append('content', post.content);\n    formData.append(\n      'post',\n      new Blob([JSON.stringify(post)], { type: 'application/json' })\n    );\n    for (let i = 0; i < post.productimage.length; i++) {\n      formData.append('imageFile', post.productimage[i].file, post.productimage[i].file.name);\n    }\n    return formData;\n  }\n\n  convertFileToDataURL(file: File): string {\n    const reader = new FileReader();\n    const result = new Promise<string>((resolve, reject) => {\n      reader.onload = (event: any) => resolve(event.target.result?.toString() || '');\n      reader.onerror = reject;\n    });\n    reader.readAsDataURL(file);\n    return result.then(dataURL => dataURL);\n  }\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"addPost(postForm)\">\n\n  <div class=\"form-group\">\n    <label for=\"content\">Content:</label>\n    <textarea formControlName=\"content\" id=\"content\" rows=\"5\" class=\"form-control\"></textarea>\n    <div *ngIf=\"postForm.get('content')?.hasError('required')\" class=\"alert alert-danger\">\n      Content is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"image\">Image:</label>\n    <input type=\"file\" (change)=\"onFileSelected($event)\" id=\"image\" formControlName=\"img\" class=\"form-control-file\">\n    <div *ngIf=\"uploadError\" class=\"alert alert-danger\">\n      Error uploading image: {{ uploadError }}\n    </div>\n    <div *ngIf=\"selectedFile\" class=\"mt-2\">\n      Selected Image: {{ selectedFile.name }}\n      <img *ngIf=\"previewImage\" [src]=\"previewImage\" alt=\"Selected Image Preview\" class=\"img-thumbnail\">\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Create Post</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}