{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/Services/fileupload.service\";\nimport * as i4 from \"@angular/platform-browser\";\nexport class CreatpostComponent {\n  constructor(postService, formBuilder, fileUploadService, sanitizer) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.fileUploadService = fileUploadService;\n    this.sanitizer = sanitizer;\n    this.post = {\n      pubid: 0,\n      likes: 0,\n      content: '',\n      publication_date: new Date(),\n      img: '',\n      comments: [],\n      productimage: []\n    };\n    this.selectedFile = null;\n    this.uploadError = null;\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n  ngOnInit() {}\n  addPost(postForm) {\n    const postFormData = this.prepareFromData(this.post);\n    this.postService.addPost(postFormData).subscribe(response => {\n      console.log('Post created successfully:', response); // Log the entire Post object\n      // Or log specific properties:\n      console.log('Content:', response.content);\n      console.log('Publication date:', response.publication_date);\n      postForm.reset(); // Reset form after success\n    }, error => {\n      console.error('Error creating post:', error.message);\n      this.uploadError = error.message; // Set user-friendly error message\n    });\n  }\n\n  onFileSelected(event) {\n    // Clear previous upload error\n    this.uploadError = null;\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const fileHandle = {\n        file,\n        url: this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(file))\n      };\n      this.post.productimage.push(fileHandle);\n    }\n  }\n  prepareFromData(post) {\n    const formData = new FormData();\n    formData.append('content', post.content);\n    formData.append('post', new Blob([JSON.stringify(post)], {\n      type: 'application/json'\n    }));\n    for (let i = 0; i < post.productimage.length; i++) {\n      formData.append('imageFile', post.productimage[i].file, post.productimage[i].file.name);\n    }\n    return formData;\n  }\n  static #_ = this.ɵfac = function CreatpostComponent_Factory(t) {\n    return new (t || CreatpostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FileuploadService), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatpostComponent,\n    selectors: [[\"app-creatpost\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", \"name\", \"image\", 3, \"change\"], [\"type\", \"submit\"]],\n    template: function CreatpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatpostComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addPost();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Content:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Image:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function CreatpostComponent_Template_input_change_6_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","CreatpostComponent","constructor","postService","formBuilder","fileUploadService","sanitizer","pubid","likes","content","publication_date","Date","img","comments","productimage","postForm","group","required","ngOnInit","addPost","postFormData","prepareFromData","post","subscribe","response","console","log","reset","error","message","uploadError","onFileSelected","event","target","files","file","fileHandle","url","bypassSecurityTrustResourceUrl","window","URL","createObjectURL","push","formData","FormData","append","Blob","JSON","stringify","type","i","length","name","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { PostService } from 'src/app/Services/post.service';\nimport { Post } from 'src/app/Model/post';\nimport { FileuploadService } from 'src/app/Services/fileupload.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FileHandle } from 'src/app/Model/file-handle';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-creatpost',\n  templateUrl: './creatpost.component.html',\n  styleUrls: ['./creatpost.component.css']\n})\nexport class CreatpostComponent implements OnInit {\n  postForm!: FormGroup;\n  post: Post = {\n    pubid: 0,\n    likes: 0,\n    content: '',\n    publication_date: new Date(),\n    img: '',\n    comments: [],\n    productimage: []\n  };\n  selectedFile: File | null = null;\n  uploadError: string | null = null;\n\n  constructor(\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private fileUploadService: FileuploadService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  addPost(postForm: FormGroup) {\n    const postFormData = this.prepareFromData(this.post);\n\n    this.postService.addPost(postFormData).subscribe(\n      (response: Post) => {\n        console.log('Post created successfully:', response); // Log the entire Post object\n        // Or log specific properties:\n        console.log('Content:', response.content);\n        console.log('Publication date:', response.publication_date);\n        postForm.reset(); // Reset form after success\n      },\n      (error: HttpErrorResponse) => {\n        console.error('Error creating post:', error.message);\n        this.uploadError = error.message; // Set user-friendly error message\n      }\n    );\n  }\n\n  onFileSelected(event: any): void {\n    // Clear previous upload error\n    this.uploadError = null;\n\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const fileHandle: FileHandle = {\n        file,\n        url: this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(file))\n      };\n      this.post.productimage.push(fileHandle);\n    }\n    \n  }\n\n  prepareFromData(post: Post): FormData {\n    const formData = new FormData();\n    formData.append('content', post.content);\n    formData.append(\n      'post',\n      new Blob([JSON.stringify(post)], { type: 'application/json' })\n    );\n    for (let i = 0; i < post.productimage.length; i++) {\n      formData.append('imageFile', post.productimage[i].file, post.productimage[i].file.name);\n    }\n    return formData;\n  }\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"addPost()\">\n  <label for=\"content\">Content:</label>\n  <textarea formControlName=\"content\"></textarea>\n\n  <label for=\"image\">Image:</label>\n  <input type=\"file\" id=\"image\" name=\"image\"  (change)=\"onFileSelected($event)\">\n\n  <button type=\"submit\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}