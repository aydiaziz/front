{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { map } from 'rxjs';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ShowimagesComponent } from '../showimages/showimages.component';\nlet PostComponent = class PostComponent {\n  constructor(postService, formBuilder, router, imageProcessingService, data, imagesDialog) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.imageProcessingService = imageProcessingService;\n    this.data = data;\n    this.imagesDialog = imagesDialog;\n    this.posts = [];\n    this.imageUrl = null;\n  }\n  ngOnInit() {\n    this.posts = [];\n    this.loadPost();\n  }\n  loadPost() {\n    this.postService.getAllPosts().pipe(map((x, i) => x.map(post => this.imageProcessingService.createImages(post)))).subscribe(resp => {\n      console.log(resp);\n      this.posts = resp;\n      for (let i = 0; i < resp.length; i++) {\n        this.showImages(resp[i]);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  showImages(post) {\n    console.log(post);\n    this.imagesDialog.open(ShowimagesComponent, {\n      data: {\n        images: post.productimage\n      },\n      height: '500px',\n      width: '800px'\n    });\n  }\n  goToCommentForm(postId) {\n    this.router.navigate(['/creat-comment', postId]);\n  }\n};\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n}), __param(4, Inject(MAT_DIALOG_DATA))], PostComponent);\nexport { PostComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAgB,eAAe;AAQzD,SAASC,GAAG,QAAQ,MAAM;AAE1B,SAASC,eAAe,QAAQ,0BAA0B;AAE1D,SAASC,mBAAmB,QAAQ,oCAAoC;AAOjE,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc,EACdC,sBAA6C,EACrBC,IAAkB,EAC3CC,YAAuB;IALtB,gBAAW,GAAXL,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,2BAAsB,GAAtBC,sBAAsB;IACE,SAAI,GAAJC,IAAI;IAC7B,iBAAY,GAAZC,YAAY;IAVrB,UAAK,GAAW,EAAE;IAElB,aAAQ,GAAkB,IAAI;EAW9B;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;EAGjB;EAEAA,QAAQ;IACN,IAAI,CAACR,WAAW,CAACS,WAAW,EAAE,CAC7BC,IAAI,CACHf,GAAG,CAAC,CAACgB,CAAS,EAAEC,CAAC,KAAID,CAAC,CAAChB,GAAG,CAAEkB,IAAS,IAAG,IAAI,CAACV,sBAAsB,CAACW,YAAY,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAC1FE,SAAS,CACPC,IAAY,IAAG;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACT,KAAK,GAAGS,IAAI;MACjB,KAAK,IAAIJ,CAAC,GAAC,CAAC,EAACA,CAAC,GAACI,IAAI,CAACG,MAAM,EAACP,CAAC,EAAE,EAAC;QAC7B,IAAI,CAACQ,UAAU,CAACJ,IAAI,CAACJ,CAAC,CAAC,CAAC;;IAG5B,CAAC,EAAGS,KAAuB,IAAG;MAC5BJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAD,UAAU,CAACP,IAAU;IACnBI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjB,IAAI,CAACR,YAAY,CAACiB,IAAI,CAACzB,mBAAmB,EAAC;MACzCO,IAAI,EAAE;QACJmB,MAAM,EAAEV,IAAI,CAACW;OACd;MAEDC,MAAM,EAAC,OAAO;MACdC,KAAK,EAAC;KACP,CAAC;EACJ;EAIAC,eAAe,CAACC,MAAc;IAC5B,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,gBAAgB,EAAED,MAAM,CAAC,CAAC;EAClD;CACD;AA3DY9B,aAAa,eALzBL,SAAS,CAAC;EACTqC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,EAYGC,iBAAM,CAACrC,eAAe,CAAC,IAXfE,aAAa,CA2DzB;SA3DYA,aAAa","names":["Component","Inject","map","MAT_DIALOG_DATA","ShowimagesComponent","PostComponent","constructor","postService","formBuilder","router","imageProcessingService","data","imagesDialog","ngOnInit","posts","loadPost","getAllPosts","pipe","x","i","post","createImages","subscribe","resp","console","log","length","showImages","error","open","images","productimage","height","width","goToCommentForm","postId","navigate","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\post\\post.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { Post } from 'src/app/Model/post';\nimport { PostService } from 'src/app/Services/post.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CreatcommentComponent } from '../creatcomment/creatcomment.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ImageProcessingService } from 'src/app/Services/image-processing.service';\nimport { map } from 'rxjs';\nimport { FileHandle } from 'src/app/Model/file-handle';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport{MatDialogModule} from '@angular/material/dialog'\nimport { ShowimagesComponent } from '../showimages/showimages.component';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: Post | undefined;\n  posts: Post[] = [];\n  postForm!: FormGroup;\n  imageUrl: string | null = null;\n\n  constructor(\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private imageProcessingService:ImageProcessingService,\n    @Inject(MAT_DIALOG_DATA) public data: FileHandle[],\n    public imagesDialog: MatDialog\n  ) {\n    \n  }\n\n  ngOnInit(): void {\n    this.posts = [];\n    this.loadPost();\n    \n    \n  }\n\n  loadPost() {\n    this.postService.getAllPosts()\n    .pipe(\n      map((x: Post[], i) =>x.map((post:Post)=>this.imageProcessingService.createImages(post))))\n    .subscribe(\n      (resp: Post[])=> {\n        console.log(resp);\n        this.posts = resp\n        for (let i=0;i<resp.length;i++){\n          this.showImages(resp[i]);\n        }\n        \n      }, (error:HttpErrorResponse)=> {\n        console.log(error);\n      }\n    );\n  }\n  \n  showImages(post: Post){\n    console.log(post);\n    this.imagesDialog.open(ShowimagesComponent,{\n      data: {\n        images: post.productimage\n      },\n\n      height:'500px',\n      width:'800px'\n    });\n  }\n  \n  \n\n  goToCommentForm(postId: number): void {\n    this.router.navigate(['/creat-comment', postId]);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}