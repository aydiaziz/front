{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/Services/fileupload.service\";\nexport class CreatpostComponent {\n  constructor(postService, formBuilder, fileUploadService) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.fileUploadService = fileUploadService;\n    this.posts = [];\n    this.selectedFile = null;\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['', Validators.required]\n    });\n  }\n  addPost() {\n    if (this.postForm.valid && this.selectedFile) {\n      const newPost = this.postForm.value;\n      // Envoie le fichier sélectionné au service de téléchargement de fichiers\n      this.fileUploadService.uploadFile(this.selectedFile).subscribe(imageUrl => {\n        newPost.img = imageUrl; // Attribuez l'URL de l'image téléchargée au champ 'img' du post\n        this.postService.addPost(newPost).subscribe(() => {\n          this.loadPosts();\n          this.postForm.reset();\n        }, error => {\n          console.error('Error adding post:', error);\n          alert('An error occurred while adding the post.');\n        });\n      }, error => {\n        console.error('Error uploading file:', error);\n        alert('An error occurred while uploading the file.');\n      });\n    } else {\n      alert('Please fill out all required fields and select an image.');\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0]; // Récupère le fichier sélectionné\n  }\n\n  loadPosts() {\n    this.postService.getAllPosts().subscribe(posts => {\n      this.posts = posts;\n    }, error => {\n      console.error('Error loading posts:', error);\n    });\n  }\n  ngOnInit() {\n    this.loadPosts();\n  }\n  static #_ = this.ɵfac = function CreatpostComponent_Factory(t) {\n    return new (t || CreatpostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FileuploadService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatpostComponent,\n    selectors: [[\"app-creatpost\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", \"name\", \"image\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"submit\"]],\n    template: function CreatpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatpostComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addPost();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Content:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Image:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function CreatpostComponent_Template_input_change_6_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAA+BA,UAAU,QAAQ,gBAAgB;;;;;AASjE,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,WAAuB,EAASC,WAAwB,EAASC,iBAAoC;IAArG,gBAAW,GAAXF,WAAW;IAAqB,gBAAW,GAAXC,WAAW;IAAsB,sBAAiB,GAAjBC,iBAAiB;IAFtG,UAAK,GAAQ,EAAE;IACf,iBAAY,GAAgB,IAAI;IAE9B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,OAAO,EAAE,CAAC,EAAE,EAACR,UAAU,CAACS,QAAQ,CAAC;MACjCC,GAAG,EAAG,CAAC,EAAE,EAACV,UAAU,CAACS,QAAQ;KAC9B,CAAC;EACJ;EAEAE,OAAO;IACL,IAAI,IAAI,CAACL,QAAQ,CAACM,KAAK,IAAI,IAAI,CAACC,YAAY,EAAE;MAC5C,MAAMC,OAAO,GAAS,IAAI,CAACR,QAAQ,CAACS,KAAa;MACjD;MACA,IAAI,CAACV,iBAAiB,CAACW,UAAU,CAAC,IAAI,CAACH,YAAY,CAAC,CAACI,SAAS,CAC3DC,QAAQ,IAAI;QACXJ,OAAO,CAACJ,GAAG,GAAGQ,QAAQ,CAAC,CAAC;QACxB,IAAI,CAACf,WAAW,CAACQ,OAAO,CAACG,OAAO,CAAC,CAACG,SAAS,CACzC,MAAK;UACH,IAAI,CAACE,SAAS,EAAE;UAChB,IAAI,CAACb,QAAQ,CAACc,KAAK,EAAE;QACvB,CAAC,EACAC,KAAK,IAAI;UACRC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1CE,KAAK,CAAC,0CAA0C,CAAC;QACnD,CAAC,CACF;MACH,CAAC,EACAF,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CE,KAAK,CAAC,6CAA6C,CAAC;MACtD,CAAC,CACF;KACF,MAAM;MACLA,KAAK,CAAC,0DAA0D,CAAC;;EAErE;EAEAC,cAAc,CAACC,KAAU;IACvB,IAAI,CAACZ,YAAY,GAAGY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C;;EAEAR,SAAS;IACP,IAAI,CAAChB,WAAW,CAACyB,WAAW,EAAE,CAACX,SAAS,CACrCY,KAAK,IAAI;MACR,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,EACAR,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EACAS,QAAQ;IACN,IAAI,CAACX,SAAS,EAAE;EAClB;EAAC;qBAvDUlB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV/BC,+BAAoD;QAAvBA;UAAA,OAAYC,aAAS;QAAA,EAAC;QACjDD,gCAAqB;QAAAA,wBAAQ;QAAAA,iBAAQ;QACrCA,8BAA+C;QAE/CA,gCAAmB;QAAAA,sBAAM;QAAAA,iBAAQ;QACjCA,gCAA8F;QAAlCA;UAAA,OAAUC,0BAAsB;QAAA,EAAC;QAA7FD,iBAA8F;QAE9FA,iCAAsB;QAAAA,sBAAM;QAAAA,iBAAS;;;QAPjCA,wCAAsB","names":["Validators","CreatpostComponent","constructor","postService","formBuilder","fileUploadService","postForm","group","content","required","img","addPost","valid","selectedFile","newPost","value","uploadFile","subscribe","imageUrl","loadPosts","reset","error","console","alert","onFileSelected","event","target","files","getAllPosts","posts","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\nimport { PostService } from 'src/app/Services/post.service';\nimport { Post } from 'src/app/Model/post';\nimport { FileuploadService } from 'src/app/Services/fileupload.service';\n@Component({\n  selector: 'app-creatpost',\n  templateUrl: './creatpost.component.html',\n  styleUrls: ['./creatpost.component.css']\n})\nexport class CreatpostComponent implements OnInit {\n  postForm!: FormGroup;\n  posts:Post[]=[];\n  selectedFile: File | null = null;\n  constructor(private postService:PostService,private formBuilder: FormBuilder,private fileUploadService: FileuploadService){\n    this.postForm = this.formBuilder.group({\n      content: ['',Validators.required],\n      img:  ['',Validators.required],\n    });\n  }\n  \n  addPost(): void {\n    if (this.postForm.valid && this.selectedFile) {\n      const newPost: Post = this.postForm.value as Post;\n      // Envoie le fichier sélectionné au service de téléchargement de fichiers\n      this.fileUploadService.uploadFile(this.selectedFile).subscribe(\n        (imageUrl) => {\n          newPost.img = imageUrl; // Attribuez l'URL de l'image téléchargée au champ 'img' du post\n          this.postService.addPost(newPost).subscribe(\n            () => {\n              this.loadPosts();\n              this.postForm.reset();\n            },\n            (error) => {\n              console.error('Error adding post:', error);\n              alert('An error occurred while adding the post.');\n            }\n          );\n        },\n        (error) => {\n          console.error('Error uploading file:', error);\n          alert('An error occurred while uploading the file.');\n        }\n      );\n    } else {\n      alert('Please fill out all required fields and select an image.');\n    }\n  }\n\n  onFileSelected(event: any): void {\n    this.selectedFile = event.target.files[0]; // Récupère le fichier sélectionné\n  }\n\n  loadPosts(): void {\n    this.postService.getAllPosts().subscribe(\n      (posts) => {\n        this.posts = posts;\n      },\n      (error) => {\n        console.error('Error loading posts:', error);\n      }\n    );\n  }\n  ngOnInit(): void {\n    this.loadPosts();\n  }\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"addPost()\">\n  <label for=\"content\">Content:</label>\n  <textarea formControlName=\"content\"></textarea>\n\n  <label for=\"image\">Image:</label>\n  <input type=\"file\" id=\"image\" name=\"image\" accept=\"image/*\" (change)=\"onFileSelected($event)\">\n\n  <button type=\"submit\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}