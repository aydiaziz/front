{"ast":null,"code":"import { map } from 'rxjs';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/Services/image-processing.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../creatcomment/creatcomment.component\";\nfunction PostComponent_ul_2_li_1_img_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 5);\n  }\n  if (rf & 2) {\n    const image_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"Image \", image_r4.file.name, \"\");\n    i0.ɵɵproperty(\"src\", image_r4.url, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PostComponent_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 2);\n    i0.ɵɵtemplate(10, PostComponent_ul_2_li_1_img_10_Template, 1, 2, \"img\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"app-creatcomment\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Post ID: \", post_r2.pubid, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Likes: \", post_r2.likes, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Content: \", post_r2.content, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Publication Date: \", post_r2.publication_date, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", post_r2.productimage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r2);\n  }\n}\nfunction PostComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, PostComponent_ul_2_li_1_Template, 12, 6, \"li\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.posts);\n  }\n}\nexport class PostComponent {\n  constructor(postService, formBuilder, router, imageProcessingService, data) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.imageProcessingService = imageProcessingService;\n    this.data = data;\n    this.posts = [];\n    this.imageUrl = null;\n  }\n  ngOnInit() {\n    this.posts = [];\n    this.loadPost();\n  }\n  loadPost() {\n    this.postService.getAllPosts().pipe(map((x, i) => x.map(post => this.imageProcessingService.createImages(post)))).subscribe(resp => {\n      console.log(resp);\n      this.posts = resp;\n    }, error => {\n      console.log(error);\n    });\n  }\n  receiveImages() {\n    console.log;\n  }\n  showImages(post) {\n    if (post.productimage && post.productimage.length > 0) {\n      return post.productimage.map(image => {\n        return `<img src=\"${image.url}\" alt=\"Image ${image.file.name}\" />`;\n      }).join('');\n    } else {\n      return 'No images available';\n    }\n  }\n  goToCommentForm(postId) {\n    this.router.navigate(['/creat-comment', postId]);\n  }\n  static #_ = this.ɵfac = function PostComponent_Factory(t) {\n    return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ImageProcessingService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostComponent,\n    selectors: [[\"app-post\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"post-images\"], [3, \"src\", \"alt\", 4, \"ngFor\", \"ngForOf\"], [3, \"post\"], [3, \"src\", \"alt\"]],\n    template: function PostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"All Posts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, PostComponent_ul_2_Template, 2, 1, \"ul\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.posts.length > 0);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.CreatcommentComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAQA,SAASA,GAAG,QAAQ,MAAM;AAE1B,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;;ICFpDC,yBAAmG;;;;IAApCA,kEAAiC;IAAnDA,oDAAiB;;;;;IANlEA,0BAA+B;IACzBA,YAAyB;IAAAA,iBAAK;IAClCA,yBAAG;IAAAA,YAAuB;IAAAA,iBAAI;IAC9BA,yBAAG;IAAAA,YAA2B;IAAAA,iBAAI;IAClCA,yBAAG;IAAAA,YAA6C;IAAAA,iBAAI;IACpDA,8BAAyB;IACvBA,0EAAmG;IACrGA,iBAAM;IAKNA,uCAAmD;IACrDA,iBAAK;;;;IAZCA,eAAyB;IAAzBA,qDAAyB;IAC1BA,eAAuB;IAAvBA,mDAAuB;IACvBA,eAA2B;IAA3BA,uDAA2B;IAC3BA,eAA6C;IAA7CA,yEAA6C;IAEvBA,eAAoB;IAApBA,8CAAoB;IAM3BA,eAAa;IAAbA,8BAAa;;;;;IAbnCA,0BAA6B;IAC3BA,kEAaK;IACPA,iBAAK;;;;IAdkBA,eAAQ;IAARA,sCAAQ;;;ADe/B,OAAM,MAAOC,aAAa;EAMxBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc,EACdC,sBAA6C,EACrBC,IAAkB;IAJ1C,gBAAW,GAAXJ,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,2BAAsB,GAAtBC,sBAAsB;IACE,SAAI,GAAJC,IAAI;IATtC,UAAK,GAAW,EAAE;IAElB,aAAQ,GAAkB,IAAI;EAS9B;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACP,WAAW,CAACQ,WAAW,EAAE,CAC7BC,IAAI,CACHd,GAAG,CAAC,CAACe,CAAS,EAAEC,CAAC,KAAID,CAAC,CAACf,GAAG,CAAEiB,IAAS,IAAG,IAAI,CAACT,sBAAsB,CAACU,YAAY,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAC1FE,SAAS,CACPC,IAAY,IAAG;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACT,KAAK,GAAGS,IAAI;IACnB,CAAC,EAAGG,KAAuB,IAAG;MAC5BF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EACAC,aAAa;IACXH,OAAO,CAACC,GAAG;EACb;EACAG,UAAU,CAACR,IAAU;IACnB,IAAGA,IAAI,CAACS,YAAY,IAAIT,IAAI,CAACS,YAAY,CAACC,MAAM,GAAG,CAAC,EAAC;MACnD,OAAOV,IAAI,CAACS,YAAY,CAAC1B,GAAG,CAAE4B,KAAiB,IAAI;QACjD,OAAO,aAAaA,KAAK,CAACC,GAAG,gBAAgBD,KAAK,CAACE,IAAI,CAACC,IAAI,MAAM;MACpE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;KACZ,MAAM;MACL,OAAO,qBAAqB;;EAEhC;EAIAC,eAAe,CAACC,MAAc;IAC5B,IAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAAC,gBAAgB,EAAED,MAAM,CAAC,CAAC;EAClD;EAAC;qBAlDU/B,aAAa,qLAWdF,eAAe;EAAA;EAAA;UAXdE,aAAa;IAAAiC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCjB1BtC,0BAAI;QAAAA,yBAAS;QAAAA,iBAAK;QAClBA,4DAeK;;;QAfAA,eAAsB;QAAtBA,2CAAsB","names":["map","MAT_DIALOG_DATA","i0","PostComponent","constructor","postService","formBuilder","router","imageProcessingService","data","ngOnInit","posts","loadPost","getAllPosts","pipe","x","i","post","createImages","subscribe","resp","console","log","error","receiveImages","showImages","productimage","length","image","url","file","name","join","goToCommentForm","postId","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\post\\post.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\post\\post.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { Post } from 'src/app/Model/post';\nimport { PostService } from 'src/app/Services/post.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CreatcommentComponent } from '../creatcomment/creatcomment.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ImageProcessingService } from 'src/app/Services/image-processing.service';\nimport { map } from 'rxjs';\nimport { FileHandle } from 'src/app/Model/file-handle';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: Post | undefined;\n  posts: Post[] = [];\n  postForm!: FormGroup;\n  imageUrl: string | null = null;\n\n  constructor(\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private imageProcessingService:ImageProcessingService,\n    @Inject(MAT_DIALOG_DATA) public data: FileHandle[]) {\n    \n  }\n\n  ngOnInit(): void {\n    this.posts = [];\n    this.loadPost();\n  }\n\n  loadPost() {\n    this.postService.getAllPosts()\n    .pipe(\n      map((x: Post[], i) =>x.map((post:Post)=>this.imageProcessingService.createImages(post))))\n    .subscribe(\n      (resp: Post[])=> {\n        console.log(resp);\n        this.posts = resp;\n      }, (error:HttpErrorResponse)=> {\n        console.log(error);\n      }\n    );\n  }\n  receiveImages(){\n    console.log\n  }\n  showImages(post: Post){\n    if(post.productimage && post.productimage.length > 0){\n      return post.productimage.map((image: FileHandle) => {\n        return `<img src=\"${image.url}\" alt=\"Image ${image.file.name}\" />`;\n      }).join('');\n    } else {\n      return 'No images available';\n    }\n  }\n  \n  \n\n  goToCommentForm(postId: number): void {\n    this.router.navigate(['/creat-comment', postId]);\n  }\n}","<h2>All Posts</h2>\n<ul *ngIf=\"posts.length > 0\">\n  <li *ngFor=\"let post of posts\">\n    <h4>Post ID: {{ post.pubid }}</h4>\n    <p>Likes: {{ post.likes }}</p>\n    <p>Content: {{ post.content }}</p>\n    <p>Publication Date: {{ post.publication_date }}</p>\n    <div class=\"post-images\">\n      <img *ngFor=\"let image of post.productimage\" [src]=\"image.url\" alt=\"Image {{ image.file.name }}\" />\n    </div>\n    <!--<div class=\"post-actions\">\n      <button (click)=\"likePost()\">Likes : {{ post.likes }}</button>\n      <button (click)=\"commentPost()\">Commentaires : {{ post.comments.length }}</button>\n    </div>-->\n    <app-creatcomment [post]=\"post\"></app-creatcomment>\n  </li>\n</ul>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}