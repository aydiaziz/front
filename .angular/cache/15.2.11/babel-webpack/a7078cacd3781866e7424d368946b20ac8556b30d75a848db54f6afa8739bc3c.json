{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/Services/fileupload.service\";\nexport class CreatpostComponent {\n  constructor(postService, formBuilder, fileUploadService) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.fileUploadService = fileUploadService;\n    this.posts = [];\n    this.selectedFile = null;\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n  addPost() {\n    if (this.postForm.valid) {\n      const newPost = this.postForm.value;\n      if (this.selectedFile) {\n        this.fileUploadService.uploadFile(this.selectedFile).subscribe(response => {\n          if (response instanceof HttpErrorResponse) {\n            console.error('Error uploading file:', response.error);\n            alert('An error occurred while uploading the file.');\n          } else if (typeof response === 'string') {\n            console.log('File uploaded successfully:', response);\n            newPost.img = response; // Supposons que la réponse contient l'URL de l'image téléchargée\n            this.savePost(newPost);\n          } else {\n            console.error('Unexpected response format:', response);\n            alert('An error occurred while uploading the file. Please try again.');\n          }\n        }, error => {\n          console.error('Error uploading file:', error);\n          alert('An error occurred while uploading the file.');\n        });\n      } else {\n        this.savePost(newPost);\n      }\n    } else {\n      console.error('Please fill out all required fields.');\n      alert('Please fill out all required fields.');\n    }\n  }\n  savePost(newPost) {\n    this.postService.addPost(newPost).subscribe(() => {\n      this.loadPosts();\n      this.postForm.reset();\n      console.log('Post added successfully!');\n    }, error => {\n      console.error('Error adding post:', error);\n      alert('An error occurred while adding the post.');\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  loadPosts() {\n    this.postService.getAllPosts().subscribe(posts => {\n      this.posts = posts;\n    }, error => {\n      console.error('Error loading posts:', error);\n    });\n  }\n  ngOnInit() {\n    this.loadPosts();\n  }\n  static #_ = this.ɵfac = function CreatpostComponent_Factory(t) {\n    return new (t || CreatpostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FileuploadService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatpostComponent,\n    selectors: [[\"app-creatpost\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", \"name\", \"image\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"submit\"]],\n    template: function CreatpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatpostComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addPost();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Content:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Image:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function CreatpostComponent_Template_input_change_6_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,kBAAkB;EAK7BC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,iBAAoC;IAFpC,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,sBAAiB,GAAjBC,iBAAiB;IAN3B,UAAK,GAAW,EAAE;IAClB,iBAAY,GAAgB,IAAI;IAO9B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAClCC,GAAG,EAAE,CAAC,EAAE;KACT,CAAC;EACJ;EAEAC,OAAO;IACL,IAAI,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;MACrB,MAAMC,OAAO,GAAS,IAAI,CAACP,QAAQ,CAACQ,KAAa;MACjD,IAAI,IAAI,CAACC,YAAY,EAAE;QACnB,IAAI,CAACV,iBAAiB,CAACW,UAAU,CAAC,IAAI,CAACD,YAAY,CAAC,CAACE,SAAS,CACzDC,QAAQ,IAAI;UACT,IAAIA,QAAQ,YAAYC,iBAAiB,EAAE;YACvCC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,QAAQ,CAACG,KAAK,CAAC;YACtDC,KAAK,CAAC,6CAA6C,CAAC;WACvD,MAAM,IAAI,OAAOJ,QAAQ,KAAK,QAAQ,EAAE;YACrCE,OAAO,CAACG,GAAG,CAAC,6BAA6B,EAAEL,QAAQ,CAAC;YACpDL,OAAO,CAACH,GAAG,GAAGQ,QAAQ,CAAC,CAAC;YACxB,IAAI,CAACM,QAAQ,CAACX,OAAO,CAAC;WACzB,MAAM;YACHO,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEH,QAAQ,CAAC;YACtDI,KAAK,CAAC,+DAA+D,CAAC;;QAE9E,CAAC,EACAD,KAAK,IAAI;UACND,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CC,KAAK,CAAC,6CAA6C,CAAC;QACxD,CAAC,CACJ;OACJ,MAAM;QACH,IAAI,CAACE,QAAQ,CAACX,OAAO,CAAC;;KAE7B,MAAM;MACHO,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;MACrDC,KAAK,CAAC,sCAAsC,CAAC;;EAErD;EAGAE,QAAQ,CAACX,OAAa;IAClB,IAAI,CAACV,WAAW,CAACQ,OAAO,CAACE,OAAO,CAAC,CAACI,SAAS,CACvC,MAAK;MACD,IAAI,CAACQ,SAAS,EAAE;MAChB,IAAI,CAACnB,QAAQ,CAACoB,KAAK,EAAE;MACrBN,OAAO,CAACG,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,EACAF,KAAK,IAAI;MACND,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CC,KAAK,CAAC,0CAA0C,CAAC;IACrD,CAAC,CACJ;EACL;EAGEK,cAAc,CAACC,KAAU;IACvB,IAAI,CAACb,YAAY,GAAGa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAL,SAAS;IACP,IAAI,CAACtB,WAAW,CAAC4B,WAAW,EAAE,CAACd,SAAS,CACrCe,KAAK,IAAI;MACR,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,EACAX,KAAK,IAAI;MACRD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEAY,QAAQ;IACN,IAAI,CAACR,SAAS,EAAE;EAClB;EAAC;qBAjFUxB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAiC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX/BC,+BAAoD;QAAvBA;UAAA,OAAYC,aAAS;QAAA,EAAC;QACjDD,gCAAqB;QAAAA,wBAAQ;QAAAA,iBAAQ;QACrCA,8BAA+C;QAE/CA,gCAAmB;QAAAA,sBAAM;QAAAA,iBAAQ;QACjCA,gCAA8F;QAAlCA;UAAA,OAAUC,0BAAsB;QAAA,EAAC;QAA7FD,iBAA8F;QAE9FA,iCAAsB;QAAAA,sBAAM;QAAAA,iBAAS;;;QAPjCA,wCAAsB","names":["Validators","CreatpostComponent","constructor","postService","formBuilder","fileUploadService","postForm","group","content","required","img","addPost","valid","newPost","value","selectedFile","uploadFile","subscribe","response","HttpErrorResponse","console","error","alert","log","savePost","loadPosts","reset","onFileSelected","event","target","files","getAllPosts","posts","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PostService } from 'src/app/Services/post.service';\nimport { Post } from 'src/app/Model/post';\nimport { FileuploadService } from 'src/app/Services/fileupload.service';\n\n@Component({\n  selector: 'app-creatpost',\n  templateUrl: './creatpost.component.html',\n  styleUrls: ['./creatpost.component.css']\n})\nexport class CreatpostComponent implements OnInit {\n  postForm!: FormGroup;\n  posts: Post[] = [];\n  selectedFile: File | null = null;\n\n  constructor(\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private fileUploadService: FileuploadService\n  ) {\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['']\n    });\n  }\n  \n  addPost(): void {\n    if (this.postForm.valid) {\n        const newPost: Post = this.postForm.value as Post;\n        if (this.selectedFile) {\n            this.fileUploadService.uploadFile(this.selectedFile).subscribe(\n                (response) => {\n                    if (response instanceof HttpErrorResponse) {\n                        console.error('Error uploading file:', response.error);\n                        alert('An error occurred while uploading the file.');\n                    } else if (typeof response === 'string') {\n                        console.log('File uploaded successfully:', response);\n                        newPost.img = response; // Supposons que la réponse contient l'URL de l'image téléchargée\n                        this.savePost(newPost);\n                    } else {\n                        console.error('Unexpected response format:', response);\n                        alert('An error occurred while uploading the file. Please try again.');\n                    }\n                },\n                (error) => {\n                    console.error('Error uploading file:', error);\n                    alert('An error occurred while uploading the file.');\n                }\n            );\n        } else {\n            this.savePost(newPost);\n        }\n    } else {\n        console.error('Please fill out all required fields.');\n        alert('Please fill out all required fields.');\n    }\n}\n\n\nsavePost(newPost: Post): void {\n    this.postService.addPost(newPost).subscribe(\n        () => {\n            this.loadPosts();\n            this.postForm.reset();\n            console.log('Post added successfully!');\n        },\n        (error) => {\n            console.error('Error adding post:', error);\n            alert('An error occurred while adding the post.');\n        }\n    );\n}\n\n\n  onFileSelected(event: any): void {\n    this.selectedFile = event.target.files[0];\n  }\n\n  loadPosts(): void {\n    this.postService.getAllPosts().subscribe(\n      (posts) => {\n        this.posts = posts;\n      },\n      (error) => {\n        console.error('Error loading posts:', error);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadPosts();\n  }\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"addPost()\">\n  <label for=\"content\">Content:</label>\n  <textarea formControlName=\"content\"></textarea>\n\n  <label for=\"image\">Image:</label>\n  <input type=\"file\" id=\"image\" name=\"image\" accept=\"image/*\" (change)=\"onFileSelected($event)\">\n\n  <button type=\"submit\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}