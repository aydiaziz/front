{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/post.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreatpostComponent {\n  constructor(postService, formBuilder) {\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.posts = [];\n    this.postForm = this.formBuilder.group({\n      content: ['', Validators.required],\n      img: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  addPost() {\n    if (this.postForm.valid) {\n      const newPost = this.postForm.value;\n      this.postService.addPost(newPost).subscribe(() => {\n        this.loadPost();\n        this.postForm.reset();\n      });\n    } else {\n      alert(\"error ! \");\n    }\n  }\n  loadPost() {\n    this.postService.getAllPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n  static #_ = this.ɵfac = function CreatpostComponent_Factory(t) {\n    return new (t || CreatpostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatpostComponent,\n    selectors: [[\"app-creatpost\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [\"formGroupName\", \"content\"], [\"formControlName\", \"content\", \"required\", \"\"], [\"formGroupName\", \"img\"], [\"type\", \"file\", \"formControlName\", \"img\", \"required\", \"\"], [3, \"click\"]],\n    template: function CreatpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Content:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"textarea\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Image:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CreatpostComponent_Template_button_click_9_listener() {\n          return ctx.addPost();\n        });\n        i0.ɵɵtext(10, \"Ajouter un post\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAA+BA,UAAU,QAAQ,gBAAgB;;;;AAQjE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,WAAuB,EAASC,WAAwB;IAAxD,gBAAW,GAAXD,WAAW;IAAqB,gBAAW,GAAXC,WAAW;IAD/D,UAAK,GAAQ,EAAE;IAEb,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACrCC,OAAO,EAAE,CAAC,EAAE,EAACP,UAAU,CAACQ,QAAQ,CAAC;MACjCC,GAAG,EAAG,CAAC,EAAE,EAACT,UAAU,CAACQ,QAAQ;KAC9B,CAAC;EACJ;EACAE,QAAQ,IACR;EACAC,OAAO;IACL,IAAG,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAC;MACrB,MAAMC,OAAO,GAAS,IAAI,CAACR,QAAQ,CAACS,KAAa;MACjD,IAAI,CAACX,WAAW,CAACQ,OAAO,CAACE,OAAO,CAAC,CAACE,SAAS,CAAC,MAAK;QAAC,IAAI,CAACC,QAAQ,EAAE;QAC/D,IAAI,CAACX,QAAQ,CAACY,KAAK,EAAE;MACvB,CAAC,CAAC;KACH,MACG;MACFC,KAAK,CAAC,UAAU,CAAC;;EAGvB;EACAF,QAAQ;IACN,IAAI,CAACb,WAAW,CAACgB,WAAW,EAAE,CAACJ,SAAS,CAACK,KAAK,IAAG;MAC/C,IAAI,CAACA,KAAK,GAACA,KAAK;IAClB,CAAC,CAAE;EAAA;EAAC;qBA1BOnB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT/BC,+BAA6B;QAEhBA,wBAAQ;QAAAA,iBAAQ;QACvBA,8BAAwD;QAC1DA,iBAAM;QACNA,8BAAyB;QAChBA,sBAAM;QAAAA,iBAAQ;QACrBA,2BAAkD;QACpDA,iBAAM;QAERA,iCAA4B;QAApBA;UAAA,OAASC,aAAS;QAAA,EAAC;QAACD,gCAAe;QAAAA,iBAAS;;;QAVhDA,wCAAsB","names":["Validators","CreatpostComponent","constructor","postService","formBuilder","postForm","group","content","required","img","ngOnInit","addPost","valid","newPost","value","subscribe","loadPost","reset","alert","getAllPosts","posts","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.ts","C:\\Users\\Aydii\\OneDrive\\Bureau\\angular\\front\\src\\app\\FrontOffice\\creatpost\\creatpost.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\nimport { PostService } from 'src/app/Services/post.service';\nimport { Post } from 'src/app/Model/post';\n@Component({\n  selector: 'app-creatpost',\n  templateUrl: './creatpost.component.html',\n  styleUrls: ['./creatpost.component.css']\n})\nexport class CreatpostComponent implements OnInit {\n  postForm!: FormGroup;\n  posts:Post[]=[];\n  constructor(private postService:PostService,private formBuilder: FormBuilder){\n    this.postForm = this.formBuilder.group({\n      content: ['',Validators.required],\n      img:  ['',Validators.required],\n    });\n  }\n  ngOnInit(): void {\n  }\n  addPost(): void{\n    if(this.postForm.valid){\n      const newPost : Post= this.postForm.value as Post;\n      this.postService.addPost(newPost).subscribe(() =>{this.loadPost();\n        this.postForm.reset();\n      });\n    }\n    else{\n      alert(\"error ! \");\n    }\n\n}\nloadPost(){\n  this.postService.getAllPosts().subscribe(posts => {\n    this.posts=posts;\n  } )}\n}\n","<form [formGroup]=\"postForm\">\n    <div formGroupName=\"content\">\n      <label>Content:</label>\n      <textarea formControlName=\"content\" required></textarea>\n    </div>\n    <div formGroupName=\"img\">\n      <label>Image:</label>\n      <input type=\"file\" formControlName=\"img\" required>\n    </div>\n  </form>\n  <button (click)=\"addPost()\">Ajouter un post</button>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}